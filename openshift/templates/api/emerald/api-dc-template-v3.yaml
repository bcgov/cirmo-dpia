apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${APPLICATION_NAME}-template
labels:
  template: ${APPLICATION_NAME}-template
objects:
- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    annotations:
      app.openshift.io/route-disabled: 'false'
      openshift.io/generated-by: OpenShiftWebConsole
    name: ${APPLICATION_NAME}
    namespace: ${LICENSE_PLATE}-${ENVIRONMENT}
    labels:
      app: ${APPLICATION_NAME}
      app.kubernetes.io/component: ${APPLICATION_NAME}
      app.kubernetes.io/instance: ${APPLICATION_NAME}
      app.kubernetes.io/name: ${APPLICATION_NAME}
      app.kubernetes.io/part-of: dpia-application
      app.openshift.io/runtime: nodejs
      app.openshift.io/runtime-namespace: ${LICENSE_PLATE}-${ENVIRONMENT}
      name: ${APPLICATION_NAME}
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
      - type: ConfigChange
    replicas: 1
    revisionHistoryLimit: 10
    test: false
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
          strimzi.io/name: ${APPLICATION_NAME}
          DataClass: ${DATACLASS}
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
      spec:
        volumes:
          - name: config-volume
            configMap:
              name: config.json
              defaultMode: 420
        containers:
          - resources: {}
            terminationMessagePath: /dev/termination-log
            name: dpia-api-artifactory
            env:
              - name: API_PORT
                value: '3000'
              - name: API_ENV
                value: dev
              - name: KEYCLOAK_AUTH_SERVER_URI
                valueFrom:
                  secretKeyRef:
                    name: keycloak-api-values
                    key: KEYCLOAK_AUTH_SERVER_URI
              - name: KEYCLOAK_RESPONSE_TYPE
                valueFrom:
                  secretKeyRef:
                    name: keycloak-api-values
                    key: KEYCLOAK_RESPONSE_TYPE
              - name: KEYCLOAK_SCOPE
                valueFrom:
                  secretKeyRef:
                    name: keycloak-api-values
                    key: KEYCLOAK_SCOPE
              - name: KEYCLOAK_REDIRECT_URI
                valueFrom:
                  secretKeyRef:
                    name: keycloak-api-values
                    key: KEYCLOAK_REDIRECT_URI
              - name: KEYCLOAK_CLIENT_ID
                valueFrom:
                  secretKeyRef:
                    name: keycloak-api-values
                    key: KEYCLOAK_CLIENT_ID
              - name: KEYCLOAK_REALM
                valueFrom:
                  secretKeyRef:
                    name: keycloak-api-values
                    key: KEYCLOAK_REALM
              - name: KEYCLOAK_CONFIDENTIAL_PORT
                valueFrom:
                  secretKeyRef:
                    name: keycloak-api-values
                    key: KEYCLOAK_CONFIDENTIAL_PORT
              - name: KEYCLOAK_SSL_REQUIRED
                valueFrom:
                  secretKeyRef:
                    name: keycloak-api-values
                    key: KEYCLOAK_SSL_REQUIRED
              - name: KEYCLOAK_CLIENT_SECRET
                valueFrom:
                  secretKeyRef:
                    name: keycloak-api-values
                    key: KEYCLOAK_CLIENT_SECRET
              - name: KEYCLOAK_TOKEN_URI
                valueFrom:
                  secretKeyRef:
                    name: keycloak-api-values
                    key: KEYCLOAK_TOKEN_URI
              - name: KEYCLOAK_LOGOUT_URI
                valueFrom:
                  secretKeyRef:
                    name: keycloak-api-values
                    key: KEYCLOAK_LOGOUT_URI
              - name: KEYCLOAK_USER_INFO_URI
                valueFrom:
                  secretKeyRef:
                    name: keycloak-api-values
                    key: KEYCLOAK_USER_INFO_URI
              - name: CONFIG_FILE_PATH
                value: /usr/src/app/config.json
              - name: POSTGRES_USER
                valueFrom:
                  secretKeyRef:
                    name: postgres-connection-secret
                    key: POSTGRES_USER
              - name: POSTGRES_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: postgres-connection-secret
                    key: POSTGRES_PASSWORD
              - name: POSTGRES_PORT
                valueFrom:
                  secretKeyRef:
                    name: postgres-connection-secret
                    key: POSTGRES_PORT
              - name: POSTGRES_DB
                valueFrom:
                  secretKeyRef:
                    name: postgres-connection-secret
                    key: POSTGRES_DB
              - name: POSTGRES_HOST
                valueFrom:
                  secretKeyRef:
                    name: postgres-connection-secret
                    key: POSTGRES_HOST
              - name: GCNOTIFY_BASE_URL
                valueFrom:
                  secretKeyRef:
                    name: gc-notify-integration-key
                    key: GCNOTIFY_BASE_URL
              - name: GCNOTIFY_API_KEY
                valueFrom:
                  secretKeyRef:
                    name: gc-notify-integration-key
                    key: GCNOTIFY_API_KEY
              - name: GCNOTIFY_TEMPLATE_ID
                valueFrom:
                  secretKeyRef:
                    name: gc-notify-integration-key
                    key: GCNOTIFY_TEMPLATE_ID
            ports:
              - containerPort: 3000
                protocol: TCP
            imagePullPolicy: IfNotPresent
            volumeMounts:
              - name: config-volume
                mountPath: /usr/src/app/config.json
                subPath: config.json
            terminationMessagePolicy: File
            image: >-
              artifacts.developer.gov.bc.ca/daa7-dpia-image-repository/api-dev:latest
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        imagePullSecrets:
          - name: emerald-artifactory-pull
        schedulerName: default-scheduler

parameters:
  - description: Application Name
    displayName: AppName
    name: APPLICATION_NAME
    required: true
    value: dpia-api
  - description: Environment
    displayName: Environment
    name: ENVIRONMENT
    required: true
    value: dev
  - description: License Plate
    displayName: License Plate
    name: LICENSE_PLATE
    required: true
    value: aa77ab
  - description: Imagestream
    displayName: Imagestream
    name: IMAGESTREAM
    required: true
    value: 'api-dev'
  - description: DataClass
    displayName: DataClass
    name: DATACLASS
    required: true
    value: 'Medium'
